{"version":3,"sources":["Input.jsx","styles.js","UserList.jsx","LoginComponent.jsx","MessageList.jsx","Greeting.jsx","Message.jsx","Master.jsx","App.js","serviceWorker.js","index.js"],"names":["Input","props","state","width","height","message","updateWindowDimensions","bind","handleMessageChange","sendMessage","this","window","addEventListener","removeEventListener","setState","innerWidth","innerHeight","event","target","value","send","Background","style","Header","Container","Form","paddingRight","Control","onChange","placeholder","Button","onClick","React","Component","styled","div","h1","UserList","users","users_list","map","user","Users","p","LoginForm","userName","passWord","url","showLogin","handleLogin","handleUsernameChange","handlePasswordChange","handleURLChange","loginHandler","position","bottom","left","Group","controlId","Label","className","type","class","MessageList","scrollToBottom","messagesEnd","scrollIntoView","behavior","messages","messages_list","Messages","float","clear","ref","el","Greeting","status","logout","login","action","HeaderLoggedIn","HeaderLoggedOut","HeaderDisconnect","Message","timestamp","date","Date","toLocaleDateString","toLocaleTimeString","time","text","User","Time","date_format","Text","EventSource","require","stream","Master","loggedInStatus","disconnect","show_login","output","created","display_users","open_stream","sessionStorage","accessToken","JSON","parse","data","close","e","console","log","username","new_users","filter","index","arr","remove_user","password","request","XMLHttpRequest","form","FormData","append","open","onreadystatechange","readyState","responseText","token","alert","undefined","setRequestHeader","App","Boolean","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.7cfd22b0.chunk.js","sourcesContent":["import React from 'react';\r\nimport styled from 'styled-components'\r\nimport {\r\n    PRIMARY_BACKGROUND,\r\n    BORDER_RADIUS,\r\n    BORDER_BOTTOM_HEADER,\r\n    HEADER_FONT_COLOR,\r\n    HEADER_FONT_SIZE,\r\n} from './styles'\r\nimport Form from \"react-bootstrap/Form\";\r\nimport Button from \"react-bootstrap/Button\";\r\nvar message = \"\"\r\n\r\n\r\nexport default class Input extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = { \r\n            width: 0, \r\n            height: 0,\r\n            message: 'test',\r\n         };\r\n        this.updateWindowDimensions = this.updateWindowDimensions.bind(this);\r\n        this.handleMessageChange = this.handleMessageChange.bind(this);\r\n        this.sendMessage = this.sendMessage.bind(this);\r\n    }\r\n    \r\n    componentDidMount() {\r\n        this.updateWindowDimensions();\r\n        window.addEventListener('resize', this.updateWindowDimensions);\r\n    }\r\n      \r\n    componentWillUnmount() {\r\n        window.removeEventListener('resize', this.updateWindowDimensions);\r\n    }\r\n      \r\n    updateWindowDimensions() {\r\n        this.setState({ width: window.innerWidth, height: window.innerHeight });\r\n    }\r\n\r\n    handleMessageChange(event) {\r\n        this.setState({message: event.target.value})\r\n    }\r\n\r\n    sendMessage() {\r\n        this.props.send(this.state.message)\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Background\r\n                style={{\r\n                    height: 70,\r\n                }}>\r\n                <Header>\r\n                </Header>\r\n                <Container>\r\n                    <Form\r\n                        style={{\r\n                            width: this.state.width ,\r\n                            paddingRight: 5,\r\n                        }}>\r\n                        <Form.Control onChange={this.handleMessageChange} placeholder=\"Type message\" />\r\n                    </Form>\r\n                    <Button onClick={this.sendMessage}>send</Button>\r\n                </Container>\r\n            </Background>\r\n        )\r\n    }\r\n}\r\n\r\nconst Background = styled.div`\r\n    background: ${PRIMARY_BACKGROUND};\r\n    border-radius: ${BORDER_RADIUS};\r\n    padding: 10px;\r\n    box-shadow: 0px 3px 10px rgba(0,0,0,0.9);\r\n`;\r\n\r\nconst Header = styled.h1`\r\n    border-bottom: ${BORDER_BOTTOM_HEADER};\r\n    font-size: ${HEADER_FONT_SIZE};\r\n    color: ${HEADER_FONT_COLOR};\r\n`;\r\n\r\nconst Container = styled.div`\r\n    display: flex;\r\n    flex-direction: row;\r\n`;","export const PRIMARY_BACKGROUND = '#121212'\r\nexport const BORDER_RADIUS = '8px'\r\nexport const BORDER_BOTTOM_HEADER = '2px solid #386bc2'\r\nexport const HEADER_FONT_SIZE = '20px'\r\nexport const BODY_FONT_SIZE = '15px'\r\nexport const HEADER_FONT_COLOR = '#FFFFFF'\r\nexport const LOGIN_PADDING = '15px'\r\nexport const LIST_FONT_COLOR = '#dbdbdb'\r\nexport const GREETING_FONT_SIZE = \"30px\"\r\nexport const GREETING_FONT_COLOR_LOGGED_IN = '2px solid #13cf48'\r\nexport const GREETING_FONT_COLOR_LOGGED_OUT = '2px solid #cf1515'\r\n","import React from 'react';\r\nimport styled from 'styled-components'\r\nimport {\r\n    PRIMARY_BACKGROUND,\r\n    BORDER_RADIUS,\r\n    BORDER_BOTTOM_HEADER,\r\n    HEADER_FONT_SIZE,\r\n    HEADER_FONT_COLOR,\r\n    LOGIN_PADDING,\r\n    LIST_FONT_COLOR,\r\n    BODY_FONT_SIZE,\r\n} from './styles'\r\n\r\nexport default class UserList extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = { width: 0, height: 0 };\r\n        this.updateWindowDimensions = this.updateWindowDimensions.bind(this);\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.updateWindowDimensions();\r\n        window.addEventListener('resize', this.updateWindowDimensions);\r\n    }\r\n      \r\n    componentWillUnmount() {\r\n        window.removeEventListener('resize', this.updateWindowDimensions);\r\n    }\r\n      \r\n    updateWindowDimensions() {\r\n        this.setState({ width: window.innerWidth, height: window.innerHeight });\r\n    }\r\n\r\n    render() {\r\n        const { \r\n            users = [\"No one else is logged in yet\"] \r\n        } = this.props;\r\n\r\n        const users_list = users.map((user) => \r\n            <Users>\r\n                {user}\r\n            </Users>\r\n        );\r\n        return(\r\n            <Background\r\n                style={{\r\n                    height: this.state.height * .70,\r\n                    width: this.state.width * .20,\r\n                }}>\r\n                <Header>\r\n                    Active Users\r\n                </Header>\r\n                { users_list }\r\n            </Background>\r\n        )\r\n    }\r\n}\r\n\r\nconst Background = styled.div`\r\n    background: ${PRIMARY_BACKGROUND};\r\n    border-radius: ${BORDER_RADIUS};\r\n    padding: ${LOGIN_PADDING};\r\n    height: \"100%\";\r\n    box-shadow: 0px 3px 10px rgba(0,0,0,0.9);\r\n    overflow-y: auto;\r\n`;\r\n\r\nconst Header = styled.h1`\r\n    border-bottom: ${BORDER_BOTTOM_HEADER};\r\n    font-size: ${HEADER_FONT_SIZE};\r\n    color: ${HEADER_FONT_COLOR};\r\n    padding: ${LOGIN_PADDING};\r\n    height: \"100%\";\r\n`;\r\n\r\nconst Users = styled.p`\r\n    color: ${LIST_FONT_COLOR};\r\n    font-size: ${BODY_FONT_SIZE};\r\n    height: \"100%\";\r\n`;","import React from 'react';\r\nimport styled from 'styled-components'\r\nimport {\r\n    PRIMARY_BACKGROUND,\r\n    BORDER_RADIUS,\r\n    BORDER_BOTTOM_HEADER,\r\n    HEADER_FONT_SIZE,\r\n    HEADER_FONT_COLOR,\r\n    LOGIN_PADDING,\r\n} from './styles'\r\nimport Form from \"react-bootstrap/Form\";\r\nimport './App.css';\r\n\r\nexport default class LoginForm extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            userName: 'enter username',\r\n            passWord: 'enter password',\r\n            url: 'enter url',\r\n            width: 0,\r\n            height: 0,\r\n            showLogin: 1,\r\n        }\r\n\r\n        this.handleLogin = this.handleLogin.bind(this);\r\n        this.handleUsernameChange = this.handleUsernameChange.bind(this);\r\n        this.handlePasswordChange = this.handlePasswordChange.bind(this);\r\n        this.handleURLChange = this.handleURLChange.bind(this);\r\n        this.updateWindowDimensions = this.updateWindowDimensions.bind(this);\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.updateWindowDimensions();\r\n        window.addEventListener('resize', this.updateWindowDimensions);\r\n    }\r\n      \r\n    componentWillUnmount() {\r\n        window.removeEventListener('resize', this.updateWindowDimensions);\r\n    }\r\n      \r\n    updateWindowDimensions() {\r\n        this.setState({ width: window.innerWidth, height: window.innerHeight });\r\n    }\r\n\r\n    handleLogin() {\r\n        this.props.loginHandler(\r\n            this.state.url, \r\n            this.state.userName, \r\n            this.state.passWord\r\n        );\r\n    }\r\n\r\n    handleUsernameChange(event) {\r\n        this.setState({ userName: event.target.value })\r\n    }\r\n\r\n    handlePasswordChange(event) {\r\n        this.setState({ passWord: event.target.value })\r\n    }\r\n\r\n    handleURLChange(event) {\r\n        this.setState( {url: event.target.value} )\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div\r\n            style ={{\r\n                width: window.innerWidth,\r\n                height: window.innerHeight,\r\n            }}>\r\n                <Background\r\n                    style ={{\r\n                        width: window.innerWidth * .5,\r\n                        position: 'absolute',\r\n                        bottom: window.innerHeight * .4,\r\n                        left: window.innerWidth * .2,\r\n                    }}>\r\n                    <Header>\r\n                        Login\r\n                    </Header>\r\n                    <Form>\r\n                        <Form.Group controlId=\"formBasicEmail\">\r\n                            <Form.Label className=\"login-form\">Chat URL</Form.Label>\r\n                            <Form.Control onChange={this.handleURLChange}  placeholder={this.state.url} />\r\n                        </Form.Group>\r\n\r\n                        <Form.Group controlId=\"formBasicEmail\">\r\n                            <Form.Label className=\"login-form\"> Username </Form.Label>\r\n                            <Form.Control onChange={this.handleUsernameChange} placeholder={this.state.userName} />\r\n                        </Form.Group>\r\n\r\n                        <Form.Group controlId=\"formBasicPassword\">\r\n                            <Form.Label className=\"login-form\">Password</Form.Label>\r\n                            <Form.Control onChange={this.handlePasswordChange} type=\"password\" placeholder={this.state.passWord} />\r\n                        </Form.Group>\r\n                        <button onClick={this.handleLogin} type=\"button\" class=\"btn btn-outline-primary\">Submit</button>\r\n                    </Form>\r\n                </Background>\r\n            </div>\r\n        )\r\n    }\r\n\r\n}\r\n\r\nconst Background = styled.div`\r\n    background: ${PRIMARY_BACKGROUND};\r\n    border-radius: ${BORDER_RADIUS};\r\n    padding: ${LOGIN_PADDING};\r\n    box-shadow: 0px 3px 10px rgba(0,0,0,0.9);\r\n`;\r\n\r\nconst Header = styled.h1`\r\n    border-bottom: ${BORDER_BOTTOM_HEADER};\r\n    font-size: ${HEADER_FONT_SIZE};\r\n    color: ${HEADER_FONT_COLOR};\r\n    padding: ${LOGIN_PADDING};\r\n`;","import React from 'react';\r\nimport {\r\n    PRIMARY_BACKGROUND,\r\n    BORDER_RADIUS,\r\n    BORDER_BOTTOM_HEADER,\r\n    HEADER_FONT_SIZE,\r\n    BODY_FONT_SIZE,\r\n    HEADER_FONT_COLOR,\r\n    LOGIN_PADDING,\r\n    LIST_FONT_COLOR,\r\n} from './styles'\r\nimport styled from 'styled-components'\r\n\r\nexport default class MessageList extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = { width: 0, height: 0 };\r\n        this.updateWindowDimensions = this.updateWindowDimensions.bind(this);\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.updateWindowDimensions();\r\n        window.addEventListener('resize', this.updateWindowDimensions);\r\n        this.scrollToBottom();\r\n    }\r\n\r\n    componentDidUpdate() {\r\n        this.scrollToBottom();\r\n      }\r\n      \r\n    componentWillUnmount() {\r\n        window.removeEventListener('resize', this.updateWindowDimensions);\r\n    }\r\n      \r\n    updateWindowDimensions() {\r\n        this.setState({ width: window.innerWidth, height: window.innerHeight });\r\n    }\r\n\r\n    scrollToBottom = () => {\r\n        this.messagesEnd.scrollIntoView({ behavior: \"smooth\" });\r\n      }\r\n\r\n    render() {\r\n        const {\r\n            messages = [\"No messages to display yet\"]\r\n        } = this.props;\r\n\r\n        const messages_list = messages.map((message) => \r\n            <Messages>\r\n                {message}\r\n            </Messages>\r\n        )\r\n\r\n        return(\r\n            <Background \r\n                style={{\r\n                    height: this.state.height * .70,\r\n                    width: this.state.width * .73,\r\n                }}>\r\n                    <Header>\r\n                    Beginning of Messages\r\n                </Header>\r\n                { messages_list }\r\n                <div style={{ float:\"left\", clear: \"both\" }}\r\n                    ref={(el) => { this.messagesEnd = el; }}>\r\n                </div>\r\n            </Background>\r\n        )\r\n    }\r\n}\r\n\r\nconst Background = styled.div`\r\n    background: ${PRIMARY_BACKGROUND};\r\n    border-radius: ${BORDER_RADIUS};\r\n    padding: ${LOGIN_PADDING};\r\n    box-shadow: 0px 3px 7px rgba(0,0,0,0.9);\r\n    overflow-y: auto;\r\n`;\r\n\r\nconst Header = styled.h1`\r\n    border-bottom: ${BORDER_BOTTOM_HEADER};\r\n    font-size: ${HEADER_FONT_SIZE};\r\n    color: ${HEADER_FONT_COLOR};\r\n    padding: ${LOGIN_PADDING};\r\n`;\r\n\r\nconst Messages = styled.p`\r\n    color: ${LIST_FONT_COLOR};\r\n    font-size: ${BODY_FONT_SIZE};\r\n    height: \"100%\";\r\n`;","import React from 'react';\r\nimport {\r\n    HEADER_FONT_COLOR,\r\n    GREETING_FONT_SIZE,\r\n    GREETING_FONT_COLOR_LOGGED_IN,\r\n    GREETING_FONT_COLOR_LOGGED_OUT,\r\n} from './styles'\r\nimport styled from 'styled-components'\r\nvar status_color = GREETING_FONT_COLOR_LOGGED_OUT\r\n\r\nexport default class Greeting extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = { width: 0, height: 0 };\r\n        this.updateWindowDimensions = this.updateWindowDimensions.bind(this);\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.updateWindowDimensions();\r\n        window.addEventListener('resize', this.updateWindowDimensions);\r\n    }\r\n      \r\n    componentWillUnmount() {\r\n        window.removeEventListener('resize', this.updateWindowDimensions);\r\n    }\r\n      \r\n    updateWindowDimensions() {\r\n        this.setState({ width: window.innerWidth, height: window.innerHeight });\r\n    }\r\n\r\n    render() {\r\n        const {\r\n            user,\r\n            status,\r\n            logout,\r\n            login,\r\n            action,\r\n        } = this.props;\r\n        return(\r\n            <Container>\r\n                {\r\n                    (status === \"you are logged in\") ?\r\n                    <HeaderLoggedIn>Hello, {user} {status}</HeaderLoggedIn>\r\n                    : <HeaderLoggedOut>Hello, {status}</HeaderLoggedOut>\r\n                }\r\n                {\r\n                    <HeaderDisconnect onClick={(action === \"Log in\") ? login : logout}>\r\n                        {action}\r\n                    </HeaderDisconnect>\r\n                }\r\n            </Container>\r\n        );\r\n    }\r\n}\r\nconst HeaderDisconnect = styled.h1`\r\n    padding-left: 10px;\r\n    font-size: ${GREETING_FONT_SIZE};\r\n    color: ${GREETING_FONT_COLOR_LOGGED_IN};\r\n    &:hover {\r\n        cursor: pointer;\r\n    };\r\n`;\r\n\r\nconst Container = styled.div`\r\n    display: flex;\r\n    flex-direction: row;\r\n`;\r\n\r\nconst HeaderLoggedIn = styled.h1`\r\n    border-left: ${GREETING_FONT_COLOR_LOGGED_IN};\r\n    font-size: ${GREETING_FONT_SIZE};\r\n    color: ${HEADER_FONT_COLOR};\r\n    padding-left: 10px;\r\n`;\r\n\r\nconst HeaderLoggedOut = styled.h1`\r\n    border-left: ${GREETING_FONT_COLOR_LOGGED_OUT};\r\n    font-size: ${GREETING_FONT_SIZE};\r\n    color: ${HEADER_FONT_COLOR};\r\n    padding-left: 10px;\r\n`;","import React from 'react';\r\nimport styled from 'styled-components'\r\nimport {\r\n    PRIMARY_BACKGROUND,\r\n    BORDER_RADIUS,\r\n    BORDER_BOTTOM_HEADER,\r\n    HEADER_FONT_SIZE,\r\n    HEADER_FONT_COLOR,\r\n    LOGIN_PADDING,\r\n    LIST_FONT_COLOR,\r\n    BODY_FONT_SIZE,\r\n} from './styles'\r\n\r\nexport default class Message extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = { width: 0, height: 0 };\r\n        this.updateWindowDimensions = this.updateWindowDimensions.bind(this);\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.updateWindowDimensions();\r\n        window.addEventListener('resize', this.updateWindowDimensions);\r\n    }\r\n      \r\n    componentWillUnmount() {\r\n        window.removeEventListener('resize', this.updateWindowDimensions);\r\n    }\r\n      \r\n    updateWindowDimensions() {\r\n        this.setState({ width: window.innerWidth, height: window.innerHeight });\r\n    }\r\n    \r\n    date_format(timestamp) {\r\n        var date = new Date(timestamp * 1000);\r\n        return (\r\n            date.toLocaleDateString(\"en-US\") +\r\n            \" \" +\r\n            date.toLocaleTimeString(\"en-US\")\r\n        );\r\n    }\r\n\r\n    render() {\r\n        const {\r\n            time = 0,\r\n            user = 0,\r\n            text = 0,\r\n        } = this.props;\r\n        return(\r\n            <Container>\r\n                <User> {user} </User>\r\n                <Time> {this.date_format(time)} </Time>\r\n                <Text> {text} </Text>\r\n            </Container>\r\n        );\r\n    }\r\n}\r\n\r\nconst Container = styled.div`\r\n    display: flex;\r\n    flex-direction: row;\r\n`;\r\n\r\nconst User = styled.p`\r\n    border-left: ${BORDER_BOTTOM_HEADER};\r\n    font-size: ${BODY_FONT_SIZE};\r\n    color: ${HEADER_FONT_COLOR};\r\n    padding: ${LOGIN_PADDING};\r\n    font-weight: bold;\r\n`;\r\n\r\nconst Time = styled.p`\r\n    color: ${LIST_FONT_COLOR};\r\n    font-size: ${BODY_FONT_SIZE};\r\n    padding: ${LOGIN_PADDING};\r\n    font-style: italic;\r\n`;\r\n\r\nconst Text = styled.p`\r\n    color: ${LIST_FONT_COLOR};\r\n    font-size: ${BODY_FONT_SIZE};\r\n    padding: ${LOGIN_PADDING};\r\n`;","import React from 'react';\r\nimport Input from './Input';\r\nimport UserList from './UserList';\r\nimport LoginComponent from './LoginComponent'\r\nimport MessageList from './MessageList';\r\nimport Greeting from './Greeting';\r\nimport Message from './Message'\r\n\r\nvar EventSource = require(\"eventsource\");\r\nvar stream = null;\r\n\r\nexport default class Master extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            showLogin: true,\r\n            loggedInStatus: \"you are not logged in.\",\r\n            user: \"Jake\",\r\n            action: \"Log in\",\r\n            messages: [],\r\n            users: [],\r\n        }\r\n    }\r\n    \r\n    render() {\r\n      const date_format = (timestamp) => {\r\n        var date = new Date(timestamp * 1000);\r\n        return (\r\n            date.toLocaleDateString(\"en-US\") +\r\n            \" \" +\r\n            date.toLocaleTimeString(\"en-US\")\r\n          );\r\n        }\r\n        //Called after login is pressed in login modal\r\n        const login = (url, username, password) => {\r\n          var request = new XMLHttpRequest();\r\n          var form = new FormData();\r\n          form.append(\"password\", password);\r\n          form.append(\"username\", username);\r\n          sessionStorage.url = \"https://cors-anywhere.herokuapp.com/\" + url;\r\n          sessionStorage.username = username;\r\n          request.open(\"POST\", sessionStorage.url + \"/login\");\r\n          request.onreadystatechange = function() {\r\n            if (this.readyState != 4) return;\r\n            if (this.status === 201) {\r\n              password = \"\";\r\n              username = \"\";\r\n              url = \"\";\r\n              sessionStorage.accessToken = JSON.parse(this.responseText).token;\r\n              open_stream()\r\n            } \r\n            else if (this.status === 403) {\r\n              alert(\"Invalid username or password\")\r\n            }\r\n            else {\r\n              alert(this.status + \"failure to /login\")\r\n            }\r\n          };\r\n          request.send(form);\r\n        }\r\n\r\n        //Called when a disconnect is triggered\r\n        const disconnect = () => {\r\n          this.setState({\r\n            loggedInStatus: \"you are not logged in\",\r\n            users: [],\r\n            action: \"Log in\",\r\n            messages: [],\r\n          });\r\n        }\r\n\r\n        //Called when a user is connected\r\n        const connect = () => {\r\n          this.setState({\r\n            loggedInStatus: \"you are logged in\",\r\n            user: sessionStorage.username,\r\n            action: \"Log out\",\r\n          });\r\n        }\r\n\r\n        const send_message = (message) => {\r\n          if (sessionStorage.accessToken === undefined ){\r\n            return;\r\n          }\r\n          if (message.value === \"\") {\r\n            return;\r\n          }\r\n          var form = new FormData();\r\n          form.append(\"message\", message);\r\n          var request = new XMLHttpRequest();\r\n          request.open(\"POST\", sessionStorage.url + \"/message\");\r\n          request.setRequestHeader(\r\n            \"Authorization\",\r\n            \"Bearer \" + sessionStorage.accessToken\r\n          );\r\n          request.send(form);\r\n        }\r\n\r\n        //Display login modal\r\n        const show_login = () => {\r\n          this.setState({\r\n            showLogin: true,\r\n          });\r\n        }\r\n\r\n        //Called when a new message needs to be displayed\r\n        const output = (message) => {\r\n          this.setState({\r\n            messages: [...this.state.messages,               \r\n            <Message \r\n              user={message.user} \r\n              time={message.created} \r\n              text={message.message}\r\n            />]\r\n         });\r\n        }\r\n\r\n        const display_users = (users) => {\r\n          this.setState({\r\n            users: users\r\n          });\r\n        }\r\n\r\n        const add_user = (user) => {\r\n          display_users([...this.state.users, user])\r\n        }\r\n\r\n        const remove_user = (user) => {\r\n          var new_users = this.state.users.filter((value, index, arr) => {\r\n            return value != user;\r\n          })\r\n          display_users(new_users)\r\n        }\r\n\r\n      \r\n        //opens a new stream to listen for SSE events\r\n        const open_stream = () => {\r\n          stream = new EventSource(\r\n            sessionStorage.url + \"/stream/\" + sessionStorage.accessToken\r\n          );\r\n\r\n          this.setState({\r\n            showLogin: false\r\n          })\r\n      \r\n          stream.addEventListener(\r\n            \"Disconnect\",\r\n            function(event) {\r\n              var data = JSON.parse(event.data);\r\n              stream.close();\r\n              disconnect();\r\n              delete sessionStorage.accessToken;\r\n              show_login();\r\n            },\r\n            false\r\n          );\r\n\r\n          stream.addEventListener(\r\n            \"Join\",\r\n            function(event) {\r\n              var data\r\n              try {\r\n                data = JSON.parse(event.data);\r\n                add_user(data.user);\r\n                output({\r\n                  user: data.user,\r\n                  time: date_format(data.created),\r\n                  message: \"JOINED\",\r\n                }\r\n              )\r\n            }\r\n          catch(e) {\r\n            console.log(\"Too bad so sad\", e)\r\n            }\r\n          },\r\n          false\r\n\r\n          );\r\n\r\n          stream.addEventListener(\r\n            \"Message\",\r\n            function(event) {     \r\n              var data = JSON.parse(event.data); \r\n              output(data);\r\n            },\r\n            false\r\n          );\r\n\r\n          stream.addEventListener(\r\n            \"Server Status\",\r\n            function(event) {\r\n              var data = JSON.parse(event.data);\r\n              var message = {\r\n                user: \"Server Status\",\r\n                time: date_format(data.created),\r\n                text: data.status,\r\n              }\r\n              output(message)\r\n            },\r\n            false\r\n          );\r\n\r\n          stream.addEventListener(\r\n            \"Users\",\r\n            function(event) {\r\n              var data\r\n              try {\r\n                data = JSON.parse(event.data);\r\n                connect();\r\n                display_users(data.users);\r\n              } catch(e) {\r\n              }\r\n            },\r\n            false\r\n          );\r\n\r\n          stream.addEventListener(\r\n            \"Part\",\r\n            function(event) {\r\n              var data = JSON.parse(event.data);\r\n              remove_user(data.user);\r\n              output({\r\n                user: data.user,\r\n                time: date_format(data.created),\r\n                message: \"PART\",\r\n              })\r\n            },\r\n            false\r\n          );\r\n\r\n          \r\n          stream.addEventListener(\r\n            \"error\",\r\n            function(event) {\r\n              disconnect()\r\n              delete sessionStorage.accessToken;\r\n              show_login()\r\n            },\r\n            false\r\n          );\r\n          \r\n        }\r\n\r\n        return(\r\n            <div className=\"App\">\r\n                {this.state.showLogin &&\r\n                    <div className=\"Login\">\r\n                        <LoginComponent loginHandler = {login}/>\r\n                    </div>\r\n                }\r\n                <div className=\"Greeting\">\r\n                  <Greeting \r\n                    user={this.state.user} \r\n                    status={this.state.loggedInStatus}\r\n                    logout={disconnect}\r\n                    login={show_login}\r\n                    action={this.state.action}\r\n                  />\r\n                </div>\r\n                <div className=\"Messages\">\r\n                    <MessageList messages={this.state.messages}/>\r\n                </div>\r\n                <div className=\"Users\">\r\n                    <UserList users={this.state.users}/>\r\n                </div>\r\n                <div className=\"Input\">\r\n                    <Input send={send_message}/>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\n","import React from 'react';\r\nimport './App.css';\r\nimport Master from './Master'\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\n\r\nfunction App() {\r\n  return (\r\n    <Master/>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}